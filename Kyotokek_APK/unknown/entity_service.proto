syntax = "proto3";

package mobile.entity.v1;
option java_package = "com.kik.entity.mobile";
option go_package = "github.com/kikinteractive/xiphias-api-mobile/generated/go/entityservice/v1;entityservice";

import "common_model.proto";
import "protobuf_validation.proto";

import "entity/v1/entity_common.proto";

//----------------------------------------------------------------------------
// Service Interfaces - GetXXX methods
//----------------------------------------------------------------------------
//
// Mobile-facing service allowing pulling of entities by batch of up to 20 ids
// Visibility is not controlled by EntityService, it is assumed if the caller has id, he/she is
// visible to all elements of the entity.
//
// Typically 4 lists might be returned:
//
//     1. The list of entities (excluding soft DELETED)
//
//     2. retriable_ids: A set of IDs that could not be retrieved for a transient reason.
//                       Clients should retry with this set of IDs in order to get the complete list.
//                       Result will be set to Result.PARTIAL if this set is non-empty.
//
//     3. failed_ids:    A set of IDs of those retrieval failed.
//                       Clients should _not_ retry with these IDs.
//                       Result will be set to Result.PARTIAL if this set is non-empty.
//
//     4. not_found_ids: Requested but not found on server or has been deleted.
//                       Not found is not considered failed.
//                       So if you call GetUsers(id1-3) and all 3 ids are not found, you'd have a response
//                       with Result.OK; empty entity list and a not_found_ids of id1-3.
//
// Error Handling:
//     1. Always try/catch rpc errors or anything unexpected
//     2. Response always return a Result tag, you might want to handle error when Result = PARTIAL
//     3. If retriable_ids is _not_ empty, further requests should be made until a response with
//        an empty set of retriable_ids is returned.
//
//*********************************************************************************
service Entity {

    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);

    rpc GetGroups(GetGroupsRequest) returns (GetGroupsResponse);
}

message GetUsersRequest {
    repeated common.XiBareUserJid ids  = 1 [(kik.validation.field_validation) = {
        mandatory: true
        min_repetitions: 1
        max_repetitions: 20 }];
}

message GetUsersResponse {
    Result result = 1;
    enum Result {
        OK      = 0;
        PARTIAL = 1;
    }

    // The set of successfully retrieved EntityUsers.
    //
    // This does _not_ include deleted entities.
    repeated common.entity.v1.EntityUser users          = 10;

    // The set of XiBareUserJid's that could not be retrieved, but should be retried.
    //
    // It is strongly encouraged (if not necessary) to retry with the set of retriable_ids,
    // until the set is empty. This mechanism provides a tolerance to transient failures,
    // as well as dealing with internal size restrictions (such as max XMPP response size).
    repeated common.XiBareUserJid        retriable_ids  = 11;

    // The set of XiBareUserJid's that could not be retrieved, but should _not_ be retried.
    repeated common.XiBareUserJid        failed_ids     = 12;

    // The set of XiBareUserJid's that could not be found (either because the entity doesn't
    // exist, or it was deleted).
    repeated common.XiBareUserJid        not_found_ids  = 13;
}

message GetGroupsRequest {
    repeated common.XiGroupJid ids = 1 [(kik.validation.field_validation) = {
        mandatory: true
        min_repetitions: 1
        max_repetitions: 20 }];
}

message GetGroupsResponse {
    Result result =1;
    enum Result {
        OK      = 0;
        PARTIAL = 1;
    }

    // The set of successfully retrieved EntityGroups.
    //
    // This does _not_ include deleted/not found entities
    repeated common.entity.v1.EntityGroup groups        = 10;

    // The set of XiGroupJid's that could not be retrieved, but should be retried.
    //
    // It is strongly encouraged (if not necessary) to retry with the set of retriable_ids,
    // until the set is empty. This mechanism provides a tolerance to transient failures,
    // as well as dealing with internal size restrictions (such as max XMPP response size).
    repeated common.XiGroupJid            retriable_ids = 11;

    // The set of XiGroupJid's that could not be retrieved, but should _not_ be retried.
    repeated common.XiGroupJid            failed_ids    = 12;

    // The set of XiGroupJid's that could not be found (either because the entity doesn't
    // exist, or it was deleted).
    repeated common.XiGroupJid            not_found_ids = 13;
}
